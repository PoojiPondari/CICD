name: Zephyr CI with Artifact Traceability

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      ZEPHYR_TOOLCHAIN_VARIANT: zephyr
      ZEPHYR_SDK_INSTALL_DIR: ${{ github.workspace }}/zephyr-sdk

    steps:
      - name: ✨ Checkout source code
        uses: actions/checkout@v4

      - name: 🎓 Set up Python and west
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 🧬 Install dependencies and west
        run: |
          pip install west
          sudo apt update && sudo apt install -y ninja-build gperf ccache dfu-util device-tree-compiler qemu-system-arm jq python3-pip
          pip install spdx-tools

      - name: 🚧 Cache Zephyr modules and SDK
        uses: actions/cache@v3
        with:
          path: |
            zephyrproject/
            ${{ env.ZEPHYR_SDK_INSTALL_DIR }}
          key: zephyr-sdk-${{ runner.os }}-${{ hashFiles('west.yml') }}

      - name: 📁 Initialize Zephyr workspace
        run: |
          west init zephyrproject
          cd zephyrproject
          west update
          west zephyr-export


      - name: 🏗️ Build for qemu_cortex_m3
        run: |
          west build -b qemu_cortex_m3 zephyr/samples/hello_world --pristine

      - name: ⏱️ Run QEMU and capture UART
        run: |
          mkdir -p build/zephyr
          west build -t run | tee build/zephyr/hello_world.log

      - name: ✅ Validate UART output
        run: |
          grep "Hello World" build/zephyr/hello_world.log

      - name: 🔐 Generate SHA256 and metadata
        run: |
          sha256sum build/zephyr/zephyr.elf > build/zephyr/firmware.sha256
          echo "{\"git_sha\": \"$(git rev-parse --short HEAD)\", \"build_time\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" > build/zephyr/build_metadata.json

      - name: 📊 Generate SPDX SBOM (simplified)
        run: |
          echo '{"spdxVersion": "SPDX-2.3", "dataLicense": "CC0-1.0", "SPDXID": "SPDXRef-DOCUMENT", "name": "zephyr-firmware", "documentNamespace": "https://example.com/spdxdocs/zephyr-firmware-$(date +%s)", "creationInfo": {"created": "$(date -u +%Y-%m-%dT%H:%M:%SZ)", "creators": ["Tool: github-ci"]}}' > build/zephyr/spdx_sbom.json

      - name: 📂 Zip firmware and logs
        run: |
          cd build/zephyr
          zip ../firmware_artifacts.zip zephyr.elf hello_world.log firmware.sha256 build_metadata.json spdx_sbom.json

      - name: 💾 Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zephyr-firmware-artifacts
          path: build/firmware_artifacts.zip
